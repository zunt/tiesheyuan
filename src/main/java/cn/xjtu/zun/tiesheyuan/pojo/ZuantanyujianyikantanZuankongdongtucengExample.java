package cn.xjtu.zun.tiesheyuan.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class ZuantanyujianyikantanZuankongdongtucengExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public ZuantanyujianyikantanZuankongdongtucengExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andZtyjyktZkdtcidIsNull() {
            addCriterion("ZTYJYKT_ZKDTCID is null");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidIsNotNull() {
            addCriterion("ZTYJYKT_ZKDTCID is not null");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidEqualTo(Long value) {
            addCriterion("ZTYJYKT_ZKDTCID =", value, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidNotEqualTo(Long value) {
            addCriterion("ZTYJYKT_ZKDTCID <>", value, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidGreaterThan(Long value) {
            addCriterion("ZTYJYKT_ZKDTCID >", value, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidGreaterThanOrEqualTo(Long value) {
            addCriterion("ZTYJYKT_ZKDTCID >=", value, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidLessThan(Long value) {
            addCriterion("ZTYJYKT_ZKDTCID <", value, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidLessThanOrEqualTo(Long value) {
            addCriterion("ZTYJYKT_ZKDTCID <=", value, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidIn(List<Long> values) {
            addCriterion("ZTYJYKT_ZKDTCID in", values, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidNotIn(List<Long> values) {
            addCriterion("ZTYJYKT_ZKDTCID not in", values, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidBetween(Long value1, Long value2) {
            addCriterion("ZTYJYKT_ZKDTCID between", value1, value2, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZtyjyktZkdtcidNotBetween(Long value1, Long value2) {
            addCriterion("ZTYJYKT_ZKDTCID not between", value1, value2, "ztyjyktZkdtcid");
            return (Criteria) this;
        }

        public Criteria andZkidIsNull() {
            addCriterion("ZKID is null");
            return (Criteria) this;
        }

        public Criteria andZkidIsNotNull() {
            addCriterion("ZKID is not null");
            return (Criteria) this;
        }

        public Criteria andZkidEqualTo(Long value) {
            addCriterion("ZKID =", value, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidNotEqualTo(Long value) {
            addCriterion("ZKID <>", value, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidGreaterThan(Long value) {
            addCriterion("ZKID >", value, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidGreaterThanOrEqualTo(Long value) {
            addCriterion("ZKID >=", value, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidLessThan(Long value) {
            addCriterion("ZKID <", value, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidLessThanOrEqualTo(Long value) {
            addCriterion("ZKID <=", value, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidIn(List<Long> values) {
            addCriterion("ZKID in", values, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidNotIn(List<Long> values) {
            addCriterion("ZKID not in", values, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidBetween(Long value1, Long value2) {
            addCriterion("ZKID between", value1, value2, "zkid");
            return (Criteria) this;
        }

        public Criteria andZkidNotBetween(Long value1, Long value2) {
            addCriterion("ZKID not between", value1, value2, "zkid");
            return (Criteria) this;
        }

        public Criteria andSkidIsNull() {
            addCriterion("SKID is null");
            return (Criteria) this;
        }

        public Criteria andSkidIsNotNull() {
            addCriterion("SKID is not null");
            return (Criteria) this;
        }

        public Criteria andSkidEqualTo(Long value) {
            addCriterion("SKID =", value, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidNotEqualTo(Long value) {
            addCriterion("SKID <>", value, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidGreaterThan(Long value) {
            addCriterion("SKID >", value, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidGreaterThanOrEqualTo(Long value) {
            addCriterion("SKID >=", value, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidLessThan(Long value) {
            addCriterion("SKID <", value, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidLessThanOrEqualTo(Long value) {
            addCriterion("SKID <=", value, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidIn(List<Long> values) {
            addCriterion("SKID in", values, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidNotIn(List<Long> values) {
            addCriterion("SKID not in", values, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidBetween(Long value1, Long value2) {
            addCriterion("SKID between", value1, value2, "skid");
            return (Criteria) this;
        }

        public Criteria andSkidNotBetween(Long value1, Long value2) {
            addCriterion("SKID not between", value1, value2, "skid");
            return (Criteria) this;
        }

        public Criteria andTsdIsNull() {
            addCriterion("TSD is null");
            return (Criteria) this;
        }

        public Criteria andTsdIsNotNull() {
            addCriterion("TSD is not null");
            return (Criteria) this;
        }

        public Criteria andTsdEqualTo(BigDecimal value) {
            addCriterion("TSD =", value, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdNotEqualTo(BigDecimal value) {
            addCriterion("TSD <>", value, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdGreaterThan(BigDecimal value) {
            addCriterion("TSD >", value, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TSD >=", value, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdLessThan(BigDecimal value) {
            addCriterion("TSD <", value, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TSD <=", value, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdIn(List<BigDecimal> values) {
            addCriterion("TSD in", values, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdNotIn(List<BigDecimal> values) {
            addCriterion("TSD not in", values, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TSD between", value1, value2, "tsd");
            return (Criteria) this;
        }

        public Criteria andTsdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TSD not between", value1, value2, "tsd");
            return (Criteria) this;
        }

        public Criteria andBsdIsNull() {
            addCriterion("BSD is null");
            return (Criteria) this;
        }

        public Criteria andBsdIsNotNull() {
            addCriterion("BSD is not null");
            return (Criteria) this;
        }

        public Criteria andBsdEqualTo(BigDecimal value) {
            addCriterion("BSD =", value, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdNotEqualTo(BigDecimal value) {
            addCriterion("BSD <>", value, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdGreaterThan(BigDecimal value) {
            addCriterion("BSD >", value, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BSD >=", value, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdLessThan(BigDecimal value) {
            addCriterion("BSD <", value, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BSD <=", value, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdIn(List<BigDecimal> values) {
            addCriterion("BSD in", values, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdNotIn(List<BigDecimal> values) {
            addCriterion("BSD not in", values, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BSD between", value1, value2, "bsd");
            return (Criteria) this;
        }

        public Criteria andBsdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BSD not between", value1, value2, "bsd");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 02 15:45:26 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zuantanyujianyikantan_zuankongdongtuceng
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}