package cn.xjtu.zun.tiesheyuan.pojo;

import java.util.ArrayList;
import java.util.List;

public class DataClassificationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public DataClassificationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSjlxfwIsNull() {
            addCriterion("SJLXFW is null");
            return (Criteria) this;
        }

        public Criteria andSjlxfwIsNotNull() {
            addCriterion("SJLXFW is not null");
            return (Criteria) this;
        }

        public Criteria andSjlxfwEqualTo(String value) {
            addCriterion("SJLXFW =", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwNotEqualTo(String value) {
            addCriterion("SJLXFW <>", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwGreaterThan(String value) {
            addCriterion("SJLXFW >", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwGreaterThanOrEqualTo(String value) {
            addCriterion("SJLXFW >=", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwLessThan(String value) {
            addCriterion("SJLXFW <", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwLessThanOrEqualTo(String value) {
            addCriterion("SJLXFW <=", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwLike(String value) {
            addCriterion("SJLXFW like", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwNotLike(String value) {
            addCriterion("SJLXFW not like", value, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwIn(List<String> values) {
            addCriterion("SJLXFW in", values, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwNotIn(List<String> values) {
            addCriterion("SJLXFW not in", values, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwBetween(String value1, String value2) {
            addCriterion("SJLXFW between", value1, value2, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andSjlxfwNotBetween(String value1, String value2) {
            addCriterion("SJLXFW not between", value1, value2, "sjlxfw");
            return (Criteria) this;
        }

        public Criteria andJtsjlxIsNull() {
            addCriterion("JTSJLX is null");
            return (Criteria) this;
        }

        public Criteria andJtsjlxIsNotNull() {
            addCriterion("JTSJLX is not null");
            return (Criteria) this;
        }

        public Criteria andJtsjlxEqualTo(String value) {
            addCriterion("JTSJLX =", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxNotEqualTo(String value) {
            addCriterion("JTSJLX <>", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxGreaterThan(String value) {
            addCriterion("JTSJLX >", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxGreaterThanOrEqualTo(String value) {
            addCriterion("JTSJLX >=", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxLessThan(String value) {
            addCriterion("JTSJLX <", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxLessThanOrEqualTo(String value) {
            addCriterion("JTSJLX <=", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxLike(String value) {
            addCriterion("JTSJLX like", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxNotLike(String value) {
            addCriterion("JTSJLX not like", value, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxIn(List<String> values) {
            addCriterion("JTSJLX in", values, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxNotIn(List<String> values) {
            addCriterion("JTSJLX not in", values, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxBetween(String value1, String value2) {
            addCriterion("JTSJLX between", value1, value2, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andJtsjlxNotBetween(String value1, String value2) {
            addCriterion("JTSJLX not between", value1, value2, "jtsjlx");
            return (Criteria) this;
        }

        public Criteria andDatabaseIsNull() {
            addCriterion("`database` is null");
            return (Criteria) this;
        }

        public Criteria andDatabaseIsNotNull() {
            addCriterion("`database` is not null");
            return (Criteria) this;
        }

        public Criteria andDatabaseEqualTo(String value) {
            addCriterion("`database` =", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseNotEqualTo(String value) {
            addCriterion("`database` <>", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseGreaterThan(String value) {
            addCriterion("`database` >", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseGreaterThanOrEqualTo(String value) {
            addCriterion("`database` >=", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseLessThan(String value) {
            addCriterion("`database` <", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseLessThanOrEqualTo(String value) {
            addCriterion("`database` <=", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseLike(String value) {
            addCriterion("`database` like", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseNotLike(String value) {
            addCriterion("`database` not like", value, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseIn(List<String> values) {
            addCriterion("`database` in", values, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseNotIn(List<String> values) {
            addCriterion("`database` not in", values, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseBetween(String value1, String value2) {
            addCriterion("`database` between", value1, value2, "database");
            return (Criteria) this;
        }

        public Criteria andDatabaseNotBetween(String value1, String value2) {
            addCriterion("`database` not between", value1, value2, "database");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_classification
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 03 17:47:06 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_classification
     *
     * @mbg.generated Thu Aug 03 17:47:06 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}