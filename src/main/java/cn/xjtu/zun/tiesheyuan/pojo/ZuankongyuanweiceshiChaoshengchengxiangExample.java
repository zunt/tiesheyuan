package cn.xjtu.zun.tiesheyuan.pojo;

import java.util.ArrayList;
import java.util.List;

public class ZuankongyuanweiceshiChaoshengchengxiangExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public ZuankongyuanweiceshiChaoshengchengxiangExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andZkywcsCscxidIsNull() {
            addCriterion("ZKYWCS_CSCXID is null");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidIsNotNull() {
            addCriterion("ZKYWCS_CSCXID is not null");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidEqualTo(Long value) {
            addCriterion("ZKYWCS_CSCXID =", value, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidNotEqualTo(Long value) {
            addCriterion("ZKYWCS_CSCXID <>", value, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidGreaterThan(Long value) {
            addCriterion("ZKYWCS_CSCXID >", value, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidGreaterThanOrEqualTo(Long value) {
            addCriterion("ZKYWCS_CSCXID >=", value, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidLessThan(Long value) {
            addCriterion("ZKYWCS_CSCXID <", value, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidLessThanOrEqualTo(Long value) {
            addCriterion("ZKYWCS_CSCXID <=", value, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidIn(List<Long> values) {
            addCriterion("ZKYWCS_CSCXID in", values, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidNotIn(List<Long> values) {
            addCriterion("ZKYWCS_CSCXID not in", values, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidBetween(Long value1, Long value2) {
            addCriterion("ZKYWCS_CSCXID between", value1, value2, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsCscxidNotBetween(Long value1, Long value2) {
            addCriterion("ZKYWCS_CSCXID not between", value1, value2, "zkywcsCscxid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidIsNull() {
            addCriterion("ZKYWCSID is null");
            return (Criteria) this;
        }

        public Criteria andZkywcsidIsNotNull() {
            addCriterion("ZKYWCSID is not null");
            return (Criteria) this;
        }

        public Criteria andZkywcsidEqualTo(Long value) {
            addCriterion("ZKYWCSID =", value, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidNotEqualTo(Long value) {
            addCriterion("ZKYWCSID <>", value, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidGreaterThan(Long value) {
            addCriterion("ZKYWCSID >", value, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidGreaterThanOrEqualTo(Long value) {
            addCriterion("ZKYWCSID >=", value, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidLessThan(Long value) {
            addCriterion("ZKYWCSID <", value, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidLessThanOrEqualTo(Long value) {
            addCriterion("ZKYWCSID <=", value, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidIn(List<Long> values) {
            addCriterion("ZKYWCSID in", values, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidNotIn(List<Long> values) {
            addCriterion("ZKYWCSID not in", values, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidBetween(Long value1, Long value2) {
            addCriterion("ZKYWCSID between", value1, value2, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andZkywcsidNotBetween(Long value1, Long value2) {
            addCriterion("ZKYWCSID not between", value1, value2, "zkywcsid");
            return (Criteria) this;
        }

        public Criteria andPdfIsNull() {
            addCriterion("PDF is null");
            return (Criteria) this;
        }

        public Criteria andPdfIsNotNull() {
            addCriterion("PDF is not null");
            return (Criteria) this;
        }

        public Criteria andPdfEqualTo(String value) {
            addCriterion("PDF =", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfNotEqualTo(String value) {
            addCriterion("PDF <>", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfGreaterThan(String value) {
            addCriterion("PDF >", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfGreaterThanOrEqualTo(String value) {
            addCriterion("PDF >=", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfLessThan(String value) {
            addCriterion("PDF <", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfLessThanOrEqualTo(String value) {
            addCriterion("PDF <=", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfLike(String value) {
            addCriterion("PDF like", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfNotLike(String value) {
            addCriterion("PDF not like", value, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfIn(List<String> values) {
            addCriterion("PDF in", values, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfNotIn(List<String> values) {
            addCriterion("PDF not in", values, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfBetween(String value1, String value2) {
            addCriterion("PDF between", value1, value2, "pdf");
            return (Criteria) this;
        }

        public Criteria andPdfNotBetween(String value1, String value2) {
            addCriterion("PDF not between", value1, value2, "pdf");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 02 15:45:26 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zuankongyuanweiceshi_chaoshengchengxiang
     *
     * @mbg.generated Wed Aug 02 15:45:26 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}